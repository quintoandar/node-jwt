const jwt = require('jsonwebtoken');

describe('Test JWT verifier', () => {
  it('should throw error when no public key is provided', () => {
    const verify = require('../main').getVerifier(undefined, undefined);
    try {
      verify('eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2p3dC1pZHAuZXhhbXBsZS5jb20iLCJzdWIiOiJtYWlsdG86bWlrZUBleGFtcGxlLmNvbSIsIm5iZiI6MTUxNTc2NTM3OSwiZXhwIjoxNTE1NzY4OTc5LCJpYXQiOjE1MTU3NjUzNzksImp0aSI6ImlkMTIzNDU2IiwidHlwIjoiaHR0cHM6Ly9leGFtcGxlLmNvbS9yZWdpc3RlciJ9.PlHZO2xjZUswKFWIhijyUBuR0-7ls5XXBo-R0yXBL3KMxqvaCAglzYAwqTqsvkC7BHi0cRv4s0n37NgHhi7HvAp9-3A4NHpfiFkB8yF-AS6Wyoe8fs1RKd-gWjI0tD4rsKbBZnWZ9nymn5OAUkYpXYJ4Y53gh3MSmD5YbLT-XepqrWcofuJPKg44MSP6qaNVaMBZMin3czfruRGFM_FqY306mbiM6-5I29iGDtjgQCjzXb2ub-xVgZ5y7pocz0fO5OMrNLIX4Aos4ygMcRa6v4iTvs-DeKftvxTN1FsENrJO3fnnF2-ljVSOtu2oNS8eSgOmwuxL-cs79XW3Vs6NOQ');
    } catch (err) {
      expect(err.name).toBe(jwt.JsonWebTokenError.name);
    }
  });
  it('should throw error when token has invalid signature', () => {
    const verify = require('../main').getVerifier('123', '123');
    try {
      verify('eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2p3dC1pZHAuZXhhbXBsZS5jb20iLCJzdWIiOiJtYWlsdG86bWlrZUBleGFtcGxlLmNvbSIsIm5iZiI6MTUxNTc2NTM3OSwiZXhwIjoxNTE1NzY4OTc5LCJpYXQiOjE1MTU3NjUzNzksImp0aSI6ImlkMTIzNDU2IiwidHlwIjoiaHR0cHM6Ly9leGFtcGxlLmNvbS9yZWdpc3RlciJ9.PlHZO2xjZUswKFWIhijyUBuR0-7ls5XXBo-R0yXBL3KMxqvaCAglzYAwqTqsvkC7BHi0cRv4s0n37NgHhi7HvAp9-3A4NHpfiFkB8yF-AS6Wyoe8fs1RKd-gWjI0tD4rsKbBZnWZ9nymn5OAUkYpXYJ4Y53gh3MSmD5YbLT-XepqrWcofuJPKg44MSP6qaNVaMBZMin3czfruRGFM_FqY306mbiM6-5I29iGDtjgQCjzXb2ub-xVgZ5y7pocz0fO5OMrNLIX4Aos4ygMcRa6v4iTvs-DeKftvxTN1FsENrJO3fnnF2-ljVSOtu2oNS8eSgOmwuxL-cs79XW3Vs6NOQ');
    } catch (err) {
      expect(err.name).toBe(jwt.JsonWebTokenError.name);
    }
  });
  it('should return when token has valid signature', () => {
    const verify = require('../main').getVerifier('28208795749788626075552890573438347120464483064940232495665649750633624338355739141471330109249183009471340236981876795924377753207235487338523022458658098132488870739588096593420709394229123175020360885478743142875928048350262836625313425870992519086487311254452269543916222380047203592488510725403876033986450369463810251336884869737525066727933775205625465106350755798724160419911190696756669097027553888584729300499651231579357802519301115812411670591847421995978613734383348919062444361893145052697593835150281734982886523489328239246317991501579541597657092734876331431147886847981017830407669497967187313120843', '65537');
    try {
      verify('eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2p3dC1pZHAuZXhhbXBsZS5jb20iLCJzdWIiOiJtYWlsdG86bWlrZUBleGFtcGxlLmNvbSIsIm5iZiI6MTUxNTc2NTM3OSwiZXhwIjoxNTE1NzY4OTc5LCJpYXQiOjE1MTU3NjUzNzksImp0aSI6ImlkMTIzNDU2IiwidHlwIjoiaHR0cHM6Ly9leGFtcGxlLmNvbS9yZWdpc3RlciJ9.PlHZO2xjZUswKFWIhijyUBuR0-7ls5XXBo-R0yXBL3KMxqvaCAglzYAwqTqsvkC7BHi0cRv4s0n37NgHhi7HvAp9-3A4NHpfiFkB8yF-AS6Wyoe8fs1RKd-gWjI0tD4rsKbBZnWZ9nymn5OAUkYpXYJ4Y53gh3MSmD5YbLT-XepqrWcofuJPKg44MSP6qaNVaMBZMin3czfruRGFM_FqY306mbiM6-5I29iGDtjgQCjzXb2ub-xVgZ5y7pocz0fO5OMrNLIX4Aos4ygMcRa6v4iTvs-DeKftvxTN1FsENrJO3fnnF2-ljVSOtu2oNS8eSgOmwuxL-cs79XW3Vs6NOQ');
    } catch (err) {
      expect(err.name).toBe(jwt.TokenExpiredError.name);
    }
  });
});
